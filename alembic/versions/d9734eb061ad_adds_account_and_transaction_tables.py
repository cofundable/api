"""Adds account and transaction tables

Revision ID: d9734eb061ad
Revises: 2e817737f9fb
Create Date: 2024-05-12 17:18:53.197940

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy import orm

from cofundable.services.causes import cause_service
from cofundable.schemas.cause import CauseRequestSchema

# revision identifiers, used by Alembic.
revision: str = "d9734eb061ad"
down_revision: Union[str, None] = "2e817737f9fb"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "account",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("balance", sa.Numeric(), nullable=False),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "transaction",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("amount", sa.Float(), nullable=False),
        sa.Column(
            "kind",
            sa.Enum("credit", "debit", name="entrytype"),
            nullable=False,
        ),
        sa.Column("note", sa.String(), nullable=True),
        sa.Column("account_id", sa.Uuid(), nullable=False),
        sa.Column("match_entry_id", sa.Uuid(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["account_id"],
            ["account.id"],
        ),
        sa.ForeignKeyConstraint(
            ["match_entry_id"],
            ["transaction.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("match_entry_id"),
    )
    with op.batch_alter_table("cause", schema=None) as batch_op:
        batch_op.add_column(sa.Column("account_id", sa.Uuid(), nullable=False))
        batch_op.create_unique_constraint("cause_account_ak", ["account_id"])
        batch_op.create_foreign_key(
            "cause_account_fk",
            "account",
            ["account_id"],
            ["id"],
        )

    with op.batch_alter_table("user", schema=None) as batch_op:
        batch_op.add_column(sa.Column("account_id", sa.Uuid(), nullable=False))
        batch_op.create_unique_constraint("user_account_ak", ["account_id"])
        batch_op.create_foreign_key(
            "user_account_fk",
            "account",
            ["account_id"],
            ["id"],
        )

    # ####################################################
    # Issue DML to create Cofundable account
    # ####################################################
    bind = op.get_bind()
    session = orm.Session(bind=bind)
    cause_service.create(
        db=session,
        data=CauseRequestSchema(name="Cofundable", handle="cofundable"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # ####################################################
    # Issue DML to delete Cofundable record
    # ####################################################
    bind = op.get_bind()
    session = orm.Session(bind=bind)
    cause = cause_service.get_cause_by_handle(session, "cofundable")
    if cause:
        cause_service.delete(session, row_id=cause.id)

    # ####################################################
    # Issue DDL to drop tables and constraints
    # ####################################################
    with op.batch_alter_table("user", schema=None) as batch_op:
        batch_op.drop_constraint("user_account_fk", type_="foreignkey")
        batch_op.drop_constraint("user_account_ak", type_="unique")
        batch_op.drop_column("account_id")

    with op.batch_alter_table("cause", schema=None) as batch_op:
        batch_op.drop_constraint("cause_account_fk", type_="foreignkey")
        batch_op.drop_constraint("cause_account_ak", type_="unique")
    op.drop_table("transaction")
    op.drop_table("account")
    # ### end Alembic commands ###
